// <auto-generated />
using System;
using Hoteles.Infraestructura.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hoteles.Infraestructura.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250415140437_TablasIniciales")]
    partial class TablasIniciales
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hoteles.Dominio.Entidades.CheckIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaHoraIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecepcionistaId")
                        .HasColumnType("int");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId")
                        .IsUnique();

                    b.ToTable("CheckIn", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.CheckOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaHoraSalida")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecepcionistaId")
                        .HasColumnType("int");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.Property<float>("TotalConsumos")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId")
                        .IsUnique();

                    b.ToTable("CheckOut", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Comodidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Comodidad", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Correo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("Correos", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Empleados", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.EstadoHabitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ultimaActualizacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EstadoHabitacion", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CheckOutId")
                        .HasColumnType("int");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<float>("MontoTotal")
                        .HasColumnType("real");

                    b.Property<int?>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CheckOutId")
                        .IsUnique();

                    b.HasIndex("ReservaId");

                    b.ToTable("Factura", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Habitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disponible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.Property<int>("TipoHabitacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoHabitacionId");

                    b.ToTable("Habitacion", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.HabitacionComodidad", b =>
                {
                    b.Property<int>("HabitacionId")
                        .HasColumnType("int");

                    b.Property<int>("ComodidadId")
                        .HasColumnType("int");

                    b.HasKey("HabitacionId", "ComodidadId");

                    b.HasIndex("ComodidadId");

                    b.ToTable("HabitacionComodidad", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.ImagenHabitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("HabitacionId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("HabitacionId");

                    b.ToTable("ImagenHabitacion", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Notificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Enviada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ReservaId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ReservaId");

                    b.ToTable("Notificacion", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EstadoTransaccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<int>("PasarelaPagoId")
                        .HasColumnType("int");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PasarelaPagoId");

                    b.HasIndex("ReservaId");

                    b.ToTable("Pago", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.PasarelaPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PasarelaPago", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Recibo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroRecibo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PagoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PagoId")
                        .IsUnique();

                    b.ToTable("Recibo", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("HabitacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("HabitacionId");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Sms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Sms", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.TipoHabitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("TipoHabitacion", (string)null);
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.CheckIn", b =>
                {
                    b.HasOne("Hoteles.Dominio.Entidades.Reserva", "Reserva")
                        .WithOne("CheckIn")
                        .HasForeignKey("Hoteles.Dominio.Entidades.CheckIn", "ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.CheckOut", b =>
                {
                    b.HasOne("Hoteles.Dominio.Entidades.Reserva", "Reserva")
                        .WithOne("CheckOut")
                        .HasForeignKey("Hoteles.Dominio.Entidades.CheckOut", "ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Factura", b =>
                {
                    b.HasOne("Hoteles.Dominio.Entidades.CheckOut", "CheckOut")
                        .WithOne("Factura")
                        .HasForeignKey("Hoteles.Dominio.Entidades.Factura", "CheckOutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoteles.Dominio.Entidades.Reserva", null)
                        .WithMany("Facturas")
                        .HasForeignKey("ReservaId");

                    b.Navigation("CheckOut");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Habitacion", b =>
                {
                    b.HasOne("Hoteles.Dominio.Entidades.TipoHabitacion", "TipoHabitacion")
                        .WithMany("Habitaciones")
                        .HasForeignKey("TipoHabitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoHabitacion");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.HabitacionComodidad", b =>
                {
                    b.HasOne("Hoteles.Dominio.Entidades.Comodidad", "Comodidad")
                        .WithMany("HabitacionComodidades")
                        .HasForeignKey("ComodidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoteles.Dominio.Entidades.Habitacion", "Habitacion")
                        .WithMany("HabitacionComodidades")
                        .HasForeignKey("HabitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comodidad");

                    b.Navigation("Habitacion");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.ImagenHabitacion", b =>
                {
                    b.HasOne("Hoteles.Dominio.Entidades.Habitacion", "Habitacion")
                        .WithMany("Imagenes")
                        .HasForeignKey("HabitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitacion");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Notificacion", b =>
                {
                    b.HasOne("Hoteles.Dominio.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hoteles.Dominio.Entidades.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cliente");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Pago", b =>
                {
                    b.HasOne("Hoteles.Dominio.Entidades.PasarelaPago", "PasarelaPago")
                        .WithMany("Pagos")
                        .HasForeignKey("PasarelaPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoteles.Dominio.Entidades.Reserva", "Reserva")
                        .WithMany("Pagos")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PasarelaPago");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Recibo", b =>
                {
                    b.HasOne("Hoteles.Dominio.Entidades.Pago", "Pago")
                        .WithOne("Recibo")
                        .HasForeignKey("Hoteles.Dominio.Entidades.Recibo", "PagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Reserva", b =>
                {
                    b.HasOne("Hoteles.Dominio.Entidades.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoteles.Dominio.Entidades.Habitacion", "Habitacion")
                        .WithMany("Reservas")
                        .HasForeignKey("HabitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Habitacion");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.CheckOut", b =>
                {
                    b.Navigation("Factura")
                        .IsRequired();
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Comodidad", b =>
                {
                    b.Navigation("HabitacionComodidades");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Habitacion", b =>
                {
                    b.Navigation("HabitacionComodidades");

                    b.Navigation("Imagenes");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Pago", b =>
                {
                    b.Navigation("Recibo")
                        .IsRequired();
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.PasarelaPago", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.Reserva", b =>
                {
                    b.Navigation("CheckIn")
                        .IsRequired();

                    b.Navigation("CheckOut")
                        .IsRequired();

                    b.Navigation("Facturas");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Hoteles.Dominio.Entidades.TipoHabitacion", b =>
                {
                    b.Navigation("Habitaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
